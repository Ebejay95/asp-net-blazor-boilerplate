apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backup-pvc
  namespace: cmc-prod
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: cmc-prod
spec:
  schedule: "0 2 * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: postgres-backup
            image: postgres:15
            command:
            - /bin/bash
            - -c
            - |
              TIMESTAMP=$(date +%Y%m%d_%H%M%S)
              BACKUP_FILE="/backups/cmc_backup_${TIMESTAMP}.sql"

              echo "Starting backup at $(date)"
              pg_dump -h postgres -U cmc_user -d cmc_production -v > $BACKUP_FILE

              if [ $? -eq 0 ]; then
                echo "Backup successful: $BACKUP_FILE"
                gzip $BACKUP_FILE
                ls -lah "/backups/cmc_backup_${TIMESTAMP}.sql.gz"
              else
                echo "Backup failed!"
                exit 1
              fi

              # Alte Backups löschen (älter als 14 Tage)
              find /backups -name "*.sql.gz" -type f -mtime +14 -delete
              echo "Cleanup completed - kept last 14 days"
            env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            volumeMounts:
            - name: backup-storage
              mountPath: /backups
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: backup-pvc
          restartPolicy: OnFailure
