apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: cmc-test
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels: { app: postgres }
  template:
    metadata:
      labels: { app: postgres }
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: postgres
          image: postgres:16
          imagePullPolicy: IfNotPresent
          ports:
            - name: pg
              containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: cmc_test
            - name: POSTGRES_USER
              value: cmc_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
          readinessProbe:
            exec:
              command: ["pg_isready","-U","cmc_user","-d","cmc_test"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 12
          livenessProbe:
            exec:
              command: ["pg_isready","-U","cmc_user","-d","cmc_test"]
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: data
          emptyDir: {}   # Ephemeral – für Test völlig okay
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: cmc-test
  labels:
    app: postgres
spec:
  selector:
    app: postgres
  ports:
    - name: pg
      port: 5432
      targetPort: 5432
