apiVersion: v1
kind: Service
metadata:
  name: cmc-app
  namespace: cmc-test
spec:
  selector:
    app: cmc-app
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cmc-app
  namespace: cmc-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cmc-app
  template:
    metadata:
      labels:
        app: cmc-app
    spec:
      containers:
        - name: cmc-app
          # Wird im Workflow via "set image" auf :test-${SHA} gesetzt
          image: ghcr.io/USERNAME/REPOSITORY:test-latest
          ports:
            - containerPort: 8080
          env:
            - name: ASPNETCORE_URLS
              value: http://+:8080
            - name: ASPNETCORE_ENVIRONMENT
              value: Staging
            - name: ConnectionStrings__Default
              valueFrom:
                secretKeyRef:
                  name: cmc-app-secret
                  key: connection
          resources:
            requests:
              cpu: "100m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 10
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cmc-app
  namespace: cmc-test
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
    - hosts:
        - test.audicius.de
      secretName: cmc-app-tls
  rules:
    - host: test.audicius.de
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: cmc-app
                port:
                  number: 80
