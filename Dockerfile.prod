# ------------------------------------------------------------
# Production Dockerfile für CMC
# ------------------------------------------------------------
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# 1) Projekte für Restore (Cache)
COPY ["src/CMC.Domain/CMC.Domain.csproj", "src/CMC.Domain/"]
COPY ["src/CMC.Contracts/CMC.Contracts.csproj", "src/CMC.Contracts/"]
COPY ["src/CMC.Application/CMC.Application.csproj", "src/CMC.Application/"]
COPY ["src/CMC.Infrastructure/CMC.Infrastructure.csproj", "src/CMC.Infrastructure/"]
COPY ["src/CMC.Web/CMC.Web.csproj", "src/CMC.Web/"]

RUN dotnet restore "src/CMC.Web/CMC.Web.csproj"

# 2) Restlicher Quellcode
COPY . .

# 3) Node installieren (für Tailwind Build)
RUN apt-get update \
 && apt-get install -y curl ca-certificates gnupg \
 && install -d -m 0755 /etc/apt/keyrings \
 && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
 && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" > /etc/apt/sources.list.d/nodesource.list \
 && apt-get update \
 && apt-get install -y nodejs \
 && npm config set fund false \
 && npm config set audit false \
 && rm -rf /var/lib/apt/lists/*

# 3b) Tailwind bauen – Auto-Erkennung v4 vs. v3 anhand der CSS-Datei
ENV NODE_ENV=production TAILWIND_MODE=build
RUN set -eux; \
  if grep -q '@import[[:space:]]\+"tailwindcss"' src/CMC.Web/Styles/app.css; then \
    echo "Detected Tailwind v4 syntax -> installing tailwindcss + CLI"; \
    cd src/CMC.Web; \
    npm init -y >/dev/null 2>&1; \
    npm install --no-audit --no-fund --save-dev tailwindcss@^4 @tailwindcss/cli@latest; \
    npx --yes @tailwindcss/cli -i ./Styles/app.css -o ./wwwroot/style.css -m; \
  else \
    echo "Assuming Tailwind v3 -> installing CLI globally"; \
    npm install -g tailwindcss@3.4.10; \
    if [ ! -f src/CMC.Web/tailwind.config.js ]; then \
      printf "module.exports = {\n  content: [\n    './src/CMC.Web/**/*.razor',\n    './src/CMC.Web/**/*.cshtml',\n    './src/CMC.Web/**/*.html',\n    './src/CMC.Web/**/*.{js,ts}',\n  ],\n  theme: { extend: {} },\n  plugins: [],\n};\n" > src/CMC.Web/tailwind.config.js ; \
    fi; \
    tailwindcss -c src/CMC.Web/tailwind.config.js -i src/CMC.Web/Styles/app.css -o src/CMC.Web/wwwroot/style.css -m; \
  fi


# 4) Publish (wwwroot/style.css ist jetzt vorhanden)
WORKDIR "/src/src/CMC.Web"
RUN dotnet publish "CMC.Web.csproj" \
    -c Release \
    -o /app/publish \
    --no-restore \
    /p:UseAppHost=false \
    /p:PublishTrimmed=false

# ------------------------------------------------------------
# Runtime
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS final

# Non-root user
RUN groupadd -r appgroup && useradd -r -g appgroup appuser

# curl für Healthcheck
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Veröffentlichtes .NET-Appverzeichnis (enthält bereits wwwroot/style.css)
COPY --from=build /app/publish .

RUN chown -R appuser:appgroup /app
USER appuser

ENV ASPNETCORE_ENVIRONMENT=Production
ENV ASPNETCORE_URLS=http://+:8080
ENV DOTNET_RUNNING_IN_CONTAINER=true
ENV DOTNET_USE_POLLING_FILE_WATCHER=true

HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

EXPOSE 8080
ENTRYPOINT ["dotnet", "CMC.Web.dll"]
