@using CMC.Web.Pages.FormFields
@inherits FormFieldBase

<div class="form-row @(Errors?.Length > 0 ? "is-invalid" : null)">
    <label class="form-label" for="@Name">@Label</label>

    <div class="totp-input-container">
        <input
            type="text"
            id="@Name"
            name="@Name"
            class="form-control totp-input @(Errors?.Length > 0 ? "is-invalid" : "")"
            value="@CurrentValue"
            @onchange="HandleValueChanged"
            @oninput="HandleInput"
            placeholder="000000"
            maxlength="6"
            pattern="[0-9]{6}"
            inputmode="numeric"
            autocomplete="one-time-code"
            readonly="@ReadOnly"
            disabled="@ReadOnly" />

        <div class="totp-help">
            <small class="text-muted">
                Geben Sie den 6-stelligen Code aus Ihrer Authenticator-App ein
            </small>
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(Hint))
    {
        <div class="form-hint">@Hint</div>
    }
    @if (Errors?.Length > 0)
    {
        <div class="field-error">
            @foreach (var e in Errors) { <div>@e</div> }
        </div>
    }
</div>

<style>
    .totp-input-container {
        max-width: 200px;
    }

    .totp-input {
        font-family: 'Courier New', monospace;
        font-size: 1.5rem;
        font-weight: bold;
        text-align: center;
        letter-spacing: 0.2em;
        padding: 12px;
        border: 2px solid #dee2e6;
        border-radius: 8px;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .totp-input:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        outline: 0;
    }

    .totp-input.is-invalid {
        border-color: #dc3545;
    }

    .totp-input.is-invalid:focus {
        border-color: #dc3545;
        box-shadow: 0 0 0 0.2rem rgba(220, 53, 69, 0.25);
    }

    .totp-input::placeholder {
        color: #adb5bd;
        letter-spacing: 0.2em;
    }

    .totp-help {
        margin-top: 0.5rem;
        text-align: center;
    }
</style>

@code {
    private string CurrentValue => Value?.ToString() ?? "";

    private async Task HandleValueChanged(ChangeEventArgs e)
    {
        var newValue = e.Value?.ToString() ?? "";
        newValue = SanitizeInput(newValue);

        if (newValue != CurrentValue)
        {
            await OnChanged(newValue);
        }
    }

    private async Task HandleInput(ChangeEventArgs e)
    {
        var newValue = e.Value?.ToString() ?? "";
        newValue = SanitizeInput(newValue);

        // FÃ¼r sofortiges Feedback beim Tippen
        if (newValue != CurrentValue)
        {
            await OnChanged(newValue);
        }
    }

    private static string SanitizeInput(string input)
    {
        if (string.IsNullOrWhiteSpace(input))
            return "";

        // Nur Ziffern erlauben, maximal 6 Zeichen
        var digits = new string(input.Where(char.IsDigit).Take(6).ToArray());
        return digits;
    }
}
