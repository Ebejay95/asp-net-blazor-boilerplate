@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Web
@inject NavigationManager Navigation

<AuthorizeView>
	<Authorized>
		<div class="relative inline-block text-left">
			<button class="profile-card flex items-center gap-2 px-3 py-2"
					@onclick="ToggleMenu"
					aria-haspopup="true"
					aria-expanded="@showMenu">
				@GetFullName(context)
				<span class="text-xs">â–¾</span>
			</button>

			@if (showMenu)
			{
				<div class="absolute right-0 mt-2 w-44 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black/5 z-50"
					 @onfocusout="HideMenu"
					 tabindex="-1">
					<ul class="py-1">
						<li>
							<NavLink href="profile" class="block px-4 py-2 text-sm hover:bg-gray-100">
								Profile
							</NavLink>
						</li>
						<li>
							<NavLink href="logout" class="block px-4 py-2 text-sm hover:bg-gray-100">
								Logout
							</NavLink>
						</li>
					</ul>
				</div>
			}
		</div>
	</Authorized>
	<NotAuthorized>
		<nav class="profile-nav">
			<ul>
				<NavLink href="login" Match="NavLinkMatch.All">
					<span aria-hidden="true"></span> Login
				</NavLink>
				<NavLink href="register">
					<span aria-hidden="true"></span> Register
				</NavLink>
			</ul>
		</nav>
	</NotAuthorized>
</AuthorizeView>

@code {
	private bool showMenu;

	private string GetFullName(AuthenticationState authState)
	{
		var firstName = GetClaim(authState, ClaimTypes.GivenName);
		var lastName = GetClaim(authState, ClaimTypes.Surname);
		return $"{firstName} {lastName}".Trim();
	}

	private string GetClaim(AuthenticationState authState, string claimType)
	{
		return authState.User.FindFirst(claimType)?.Value ?? "N/A";
	}

	private void ToggleMenu()
	{
		showMenu = !showMenu;
	}

	private void HideMenu(FocusEventArgs _)
	{
		showMenu = false;
	}
}
