@using Microsoft.AspNetCore.Components.Forms
@using CMC.Web.Pages.Shared.Forms

<EditForm Model="Model" OnValidSubmit="OnValidSubmit">
  <DataAnnotationsValidator />

  <div class="grid">
    <div class="col">
      <label>Firmenname</label>
      <InputText class="form-control" @bind-Value="Model.Name" />
    </div>
    <div class="col">
      <label>Anzahl Mitarbeiter</label>
      <InputNumber TValue="int" class="form-control" @bind-Value="Model.EmployeeCount" />
    </div>
    <div class="col">
      <label>Jahresumsatz</label>
      <InputNumber TValue="decimal" class="form-control" @bind-Value="Model.RevenuePerYear" />
    </div>
  </div>

  <div class="mt-2">
    <label>Branchen</label>

    @if (IndustryOptions is null || IndustryOptions.Count == 0)
    {
      <div class="form-control" style="padding:8px">
        <span class="text-muted">Keine Optionen verf√ºgbar</span>
      </div>
    }
    else
    {
      <div class="checkbox-list">
        @foreach (var opt in IndustryOptions)
        {
          <label class="chk-inline">
            <input type="checkbox"
                   checked="@SelectedIndustryIds.Contains(opt.Id)"
                   @onchange="@(e => IndustryChanged(opt.Id, e))" />
            <span class="switch-track"></span>
            @opt.Name
          </label>
        }
      </div>
    }
  </div>

  <button class="btn primary mt-3" type="submit">Speichern</button>
</EditForm>

@code {
  [Parameter, EditorRequired] public UpdateCompanyForm Model { get; set; } = default!;
  [Parameter] public IReadOnlyList<(Guid Id, string Name)> IndustryOptions { get; set; } = Array.Empty<(Guid, string)>();
  [Parameter] public IReadOnlySet<Guid> SelectedIndustryIds { get; set; } = new HashSet<Guid>(); // .NET 8; falls .NET 7 -> IEnumerable<Guid>
  [Parameter] public Func<Guid, ChangeEventArgs, Task> IndustryChanged { get; set; } = default!;
  [Parameter] public EventCallback OnValidSubmit { get; set; }
}
