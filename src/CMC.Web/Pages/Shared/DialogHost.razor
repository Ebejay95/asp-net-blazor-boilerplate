@inject CMC.Web.Services.DialogService Dialogs
@implements IDisposable

<Dialog IsOpen="@_dlgOpen"
        Title="@(_dlgReq?.Title ?? "")"
        Message="@(_dlgReq?.Message ?? "")"
        ConfirmText="@(_dlgReq?.ConfirmText ?? "OK")"
        CancelText="@_dlgReq?.CancelText"
        OnConfirm="HandleDlgConfirm"
        OnCancel="HandleDlgCancel" />

<ChoiceDialog
    IsOpen="@_choiceOpen"
    Title="@(_choiceReq?.Title ?? string.Empty)"
    Message="@(_choiceReq?.Message ?? string.Empty)"
    ConfirmText="@(_choiceReq?.ConfirmText ?? "Ãœbernehmen")"
    CancelText="@(_choiceReq?.CancelText ?? "Abbrechen")"
    Options="@_choiceOptions"
    MultiSelect="@(_choiceReq?.MultiSelect ?? false)"
    OnConfirmKeys="HandleChoiceConfirm"
    OnCancel="HandleChoiceCancel" />

@code {
    // --- Confirm/Info Dialog ---
    private bool _dlgOpen;
    private DialogRequest? _dlgReq;

    // --- Choice Dialog (dein bestehendes) ---
    private bool _choiceOpen;
    private ChoiceRequest? _choiceReq;
    private List<DialogOption> _choiceOptions = new();

    protected override void OnInitialized()
    {
        Dialogs.OnOpen += OpenDialog;
        Dialogs.OnOpenChoice += OpenChoice;
    }

    private void OpenDialog(DialogRequest req)
    {
        _dlgReq = req;
        _dlgOpen = true;
        StateHasChanged();
    }

    private async Task HandleDlgConfirm()
    {
        var cb = _dlgReq?.OnConfirm;
        _dlgOpen = false; StateHasChanged();
        if (cb is not null) await cb();
    }

    private async Task HandleDlgCancel()
    {
        var cb = _dlgReq?.OnCancel;
        _dlgOpen = false; StateHasChanged();
        if (cb is not null) await cb();
    }

    private void OpenChoice(ChoiceRequest req)
    {
        _choiceReq = req;
        _choiceOptions = req.Options?.ToList() ?? new();
        _choiceOpen = true;
        StateHasChanged();
    }

    private async Task HandleChoiceConfirm(IReadOnlyList<string> keys)
    {
        var cb = _choiceReq?.OnConfirm;
        _choiceOpen = false; StateHasChanged();
        if (cb is not null) await cb(keys);
    }

    private async Task HandleChoiceCancel()
    {
        var cb = _choiceReq?.OnCancel;
        _choiceOpen = false; StateHasChanged();
        if (cb is not null) await cb();
    }

    public void Dispose()
    {
        Dialogs.OnOpen -= OpenDialog;
        Dialogs.OnOpenChoice -= OpenChoice;
    }
}
