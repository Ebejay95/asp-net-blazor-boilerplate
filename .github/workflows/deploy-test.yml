name: Deploy CMC Test

on:
  push:
    branches: [test]
  pull_request:
    branches: [test]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cmc_test
        options: >-
          --health-cmd "pg_isready -U postgres -d cmc_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: '8.0.x' }
      - run: dotnet restore
      - run: dotnet build --no-restore -c Release
      - run: dotnet test --no-build -c Release --verbosity normal
        env:
          ConnectionStrings__DefaultConnection: "Host=localhost;Database=cmc_test;Username=postgres;Password=postgres"

  build-and-deploy:
    needs: test
    if: github.ref == 'refs/heads/test'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Normalize image name
        run: echo "IMAGE_NAME_LOWER=$(echo '${{ env.IMAGE_NAME }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push test image (latest + SHA)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.prod
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:test-latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}:test-${{ github.sha }}

      - uses: azure/setup-kubectl@v4
        with: { version: 'latest' }

      - name: Write kubeconfig from KUBECONFIG_B64
        env: { KUBECONFIG_B64: ${{ secrets.KUBECONFIG_B64 }} }
        run: |
          set -euo pipefail
          test -n "${KUBECONFIG_B64:-}" || { echo "Missing KUBECONFIG_B64"; exit 1; }
          mkdir -p ~/.kube
          echo "$KUBECONFIG_B64" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config
          kubectl cluster-info

      - name: Replace image name in test manifests (no-op if already set)
        run: |
          sed -i "s|ghcr.io/USERNAME/REPOSITORY|${{ env.REGISTRY }}/${{ env.IMAGE_NAME_LOWER }}|g" k8s/test/cmc-app.yaml || true

      - name: Create namespaces
        run: kubectl apply -f k8s/namespaces.yaml

      - name: Create/update secrets (test)
        env:
          DB_PASSWORD: ${{ secrets.DB_PW }}
        run: |
          set -euo pipefail
          kubectl -n cmc-test create secret generic postgres-secret \
            --from-literal=password="${DB_PASSWORD}" \
            --dry-run=client -o yaml | kubectl apply -f -
          CONNECTION_STRING="Host=postgres;Port=5432;Database=cmc_test;Username=cmc_user;Password=${DB_PASSWORD
