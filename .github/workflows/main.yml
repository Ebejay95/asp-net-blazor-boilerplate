name: CI Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release


  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Create clean source archive
      run: |
        echo "Creating source code archive..."

        # Create a clean copy in a temporary directory
        mkdir -p /tmp/clean-source

        # Copy all files except excluded ones
        rsync -av \
          --exclude='.git/' \
          --exclude='.github/' \
          --exclude='bin/' \
          --exclude='obj/' \
          --exclude='*/bin/' \
          --exclude='*/obj/' \
          --exclude='*.user' \
          --exclude='.vs/' \
          --exclude='.vscode/' \
          --exclude='node_modules/' \
          ./ /tmp/clean-source/

        # Create archive from the clean copy
        cd /tmp
        tar -czf source-code.tar.gz clean-source/

        # Move archive to workspace
        mv source-code.tar.gz $GITHUB_WORKSPACE/
        cd $GITHUB_WORKSPACE

        echo "Archive created:"
        ls -la source-code.tar.gz
        echo "Archive size:"
        du -h source-code.tar.gz

    - name: Prepare deployment directory
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USER }}
        password: ${{ secrets.SSH_PRIVATE_KEY_USER_PW }}
        timeout: 300s
        script: |
          echo "=== Starting Repository Deployment ==="

          # Create backup if directory exists
          if [ -d "/var/www/cmc-app" ]; then
            sudo mv /var/www/cmc-app /var/www/cmc-app-backup-$(date +%Y%m%d_%H%M%S)
            echo "Created backup"
          fi

          # Create target directory with full permissions
          sudo mkdir -p /var/www/cmc-app
          sudo chmod 777 /var/www/cmc-app
          cd /var/www/cmc-app

          echo "=== Directory prepared with 777 permissions ==="

    - name: Upload source code
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USER }}
        password: ${{ secrets.SSH_PRIVATE_KEY_USER_PW }}
        source: "source-code.tar.gz"
        target: "/tmp/"
        timeout: 60s
        overwrite: true

    - name: Extract and finalize
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HETZNER_HOST }}
        username: ${{ secrets.HETZNER_USER }}
        password: ${{ secrets.SSH_PRIVATE_KEY_USER_PW }}
        timeout: 300s
        script: |
          echo "=== Extracting source code ==="

          # Extract source code to target directory, stripping clean-source folder
          cd /var/www/cmc-app
          tar -xzf /tmp/source-code.tar.gz --strip-components=1

          echo "Source code extracted. Contents:"
          ls -la

          # Set 777 permissions recursively for everyone
          chmod -R 777 /var/www/cmc-app

          # Clean up
          rm /tmp/source-code.tar.gz

          echo "=== Deployment Complete ==="
          echo "Repository content is now in /var/www/cmc-app/ with 777 permissions"
